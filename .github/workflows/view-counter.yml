name: View Counter

on:
  repository_dispatch:
    types: [manga_info_view, chapter_view]
  workflow_dispatch:

jobs:
  update-views:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Update view counter
        run: |
          if [ ! -f stats.json ]; then
            echo '{"pending_commits":0,"mangas":{}}' > stats.json
          fi
          
          node -e "
          const fs = require('fs');
          const stats = JSON.parse(fs.readFileSync('stats.json', 'utf8'));
          
          const eventType = '${{ github.event.action }}';
          const mangaId = '${{ github.event.client_payload.manga_id }}';
          const chapter = '${{ github.event.client_payload.chapter }}';
          
          if (!stats.mangas) stats.mangas = {};
          if (!stats.mangas[mangaId]) {
            stats.mangas[mangaId] = {
              info_views: 0,
              chapters: {}
            };
          }
          
          if (eventType === 'manga_info_view') {
            stats.mangas[mangaId].info_views = (stats.mangas[mangaId].info_views || 0) + 1;
            console.log('Incremented info views for', mangaId);
          } else if (eventType === 'chapter_view') {
            if (!stats.mangas[mangaId].chapters) stats.mangas[mangaId].chapters = {};
            stats.mangas[mangaId].chapters[chapter] = (stats.mangas[mangaId].chapters[chapter] || 0) + 1;
            console.log('Incremented chapter', chapter, 'views for', mangaId);
          }
          
          stats.pending_commits = (stats.pending_commits || 0) + 1;
          
          fs.writeFileSync('stats.json', JSON.stringify(stats, null, 2));
          
          console.log('Updated stats:', stats);
          console.log('Pending commits:', stats.pending_commits);
          "
      
      - name: Check if commit needed
        id: check_commit
        run: |
          PENDING=$(node -e "console.log(require('./stats.json').pending_commits)")
          echo "pending=$PENDING" >> $GITHUB_OUTPUT
          
          if [ "$PENDING" -ge 20 ]; then
            echo "should_commit=true" >> $GITHUB_OUTPUT
          else
            echo "should_commit=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Commit and push if threshold reached
        if: steps.check_commit.outputs.should_commit == 'true'
        run: |
          node -e "
          const fs = require('fs');
          const stats = JSON.parse(fs.readFileSync('stats.json', 'utf8'));
          stats.pending_commits = 0;
          fs.writeFileSync('stats.json', JSON.stringify(stats, null, 2));
          "
          
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
          git add stats.json
          git commit -m "📊 Update view stats (auto-commit every 20 views)"
          git push
          
          echo "✅ Stats committed and pushed!"
      
      - name: Log pending views
        if: steps.check_commit.outputs.should_commit == 'false'
        run: |
          echo "📝 View recorded. ${{ steps.check_commit.outputs.pending }}/20 views pending for next commit."
